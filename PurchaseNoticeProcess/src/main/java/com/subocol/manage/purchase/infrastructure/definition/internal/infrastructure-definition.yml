openapi: 3.0.3
info:
  title: Infrastructure Definition
  description: Contains the infrastructure definition of persistence entities and repositories.
  version: 1.0.0

tags:
  - name: customer

paths:
  /customers:
    post:
      tags:
        - customer
      summary: Registers a customer
      description: registers a customer
      operationId: register
      requestBody:
        description: Customer registration details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterCustomer'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    get:
      tags:
        - customer
      summary: Retrieves all customer
      description: Retrieves all customer
      operationId: displayAll
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
  /customers/{customerId}:
    get:
      tags:
        - customer
      summary: Retrieves customer by id
      description: Retrieves customer by id
      operationId: displayBy
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    put:
      tags:
        - customer
      summary: Change customer details
      description: Change customer details
      operationId: changeDetails
      requestBody:
        description: Changed customer details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeCustomerDetails'
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
components:
  schemas:
    RegisterCustomer:
      type: object
      required:
        - firstName
        - lastName
        - birthDate
        - address
        - gender
        - emailAddress
      properties:
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date
        address:
          $ref: '#/components/schemas/Address'
        gender:
          $ref: '#/components/schemas/Gender'
        emailAddress:
          type: string
    ChangeCustomerDetails:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date
        address:
          $ref: '#/components/schemas/Address'
        gender:
          $ref: '#/components/schemas/Gender'
        emailAddress:
          type: string
    Customer:
      type: object
      properties:
        customerId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date
        address:
          $ref: '#/components/schemas/Address'
        gender:
          $ref: '#/components/schemas/Gender'
        emailAddress:
          type: string
    Address:
      type: object
      properties:
        country:
          $ref: '#/components/schemas/Country'
        city:
          type: string
        postalCode:
          type: integer
        streetAddress:
          type: string
    Country:
      type: string
      enum:
        - HUNGARY
        - GERMANY
    Gender:
      type: string
      enum:
        - MALE
        - FEMALE